{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/hogwa/Documents/AdvancedNodeAuth/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Questions}from'./Helpers/QuestionBank';import{QuizContext}from'./Helpers/Contexts';function Quiz(){var _useContext=useContext(QuizContext),score=_useContext.score,setScore=_useContext.setScore,setGameState=_useContext.setGameState;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currQuestion=_useState2[0],setCurrQuestion=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),optionChosen=_useState4[0],setOptionChosen=_useState4[1];var nextQuestion=function nextQuestion(){if(Questions[currQuestion].answer==optionChosen){setScore(score+1);}setCurrQuestion(currQuestion+1);};var finishQuiz=function finishQuiz(){if(Questions[currQuestion].answer==optionChosen){setScore(score+1);}setGameState(\"endScreen\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"Quiz\",children:[/*#__PURE__*/_jsx(\"h1\",{children:Questions[currQuestion].prompt}),/*#__PURE__*/_jsxs(\"div\",{className:\"options\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setOptionChosen(\"A\");},children:Questions[currQuestion].optionA}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setOptionChosen(\"B\");},children:Questions[currQuestion].optionB}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setOptionChosen(\"C\");},children:Questions[currQuestion].optionC}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setOptionChosen(\"D\");},children:Questions[currQuestion].optionD})]}),currQuestion==Questions.length-1?/*#__PURE__*/_jsx(\"button\",{onClick:finishQuiz,children:\"Finish Quiz\"}):/*#__PURE__*/_jsx(\"button\",{onClick:nextQuestion,children:\"Next Question\"})]});}export default Quiz;","map":{"version":3,"sources":["C:/Users/hogwa/documents/advancednodeauth/client/src/components/quizapp/Quiz.js"],"names":["React","useState","useContext","Questions","QuizContext","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","optionChosen","setOptionChosen","nextQuestion","answer","finishQuiz","prompt","optionA","optionB","optionC","optionD","length"],"mappings":"+PAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAwBC,UAAxB,KAAyC,OAAzC,CACA,OAAQC,SAAR,KAAwB,wBAAxB,CACA,OAASC,WAAT,KAA4B,oBAA5B,CAEA,QAASC,CAAAA,IAAT,EAAgB,iBAC4BH,UAAU,CAACE,WAAD,CADtC,CACLE,KADK,aACLA,KADK,CACEC,QADF,aACEA,QADF,CACYC,YADZ,aACYA,YADZ,eAG4BP,QAAQ,CAAC,CAAD,CAHpC,wCAGLQ,YAHK,eAGSC,eAHT,8BAI2BT,QAAQ,CAAC,EAAD,CAJnC,yCAINU,YAJM,eAIQC,eAJR,eAMZ,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAGV,SAAS,CAACM,YAAD,CAAT,CAAwBK,MAAxB,EAAkCH,YAArC,CAAmD,CAC/CJ,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACH,CACDI,eAAe,CAACD,YAAY,CAAG,CAAhB,CAAf,CACH,CALD,CAOA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAGZ,SAAS,CAACM,YAAD,CAAT,CAAwBK,MAAxB,EAAkCH,YAArC,CAAmD,CAC/CJ,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACH,CACDE,YAAY,CAAC,WAAD,CAAZ,CACH,CALD,CAOA,mBACI,aAAK,SAAS,CAAC,MAAf,wBACI,oBAAKL,SAAS,CAACM,YAAD,CAAT,CAAwBO,MAA7B,EADJ,cAEI,aAAK,SAAS,CAAC,SAAf,wBACI,eAAQ,OAAO,CAAE,yBAAMJ,CAAAA,eAAe,CAAC,GAAD,CAArB,EAAjB,UAA8CT,SAAS,CAACM,YAAD,CAAT,CAAwBQ,OAAtE,EADJ,cAEI,eAAQ,OAAO,CAAE,yBAAML,CAAAA,eAAe,CAAC,GAAD,CAArB,EAAjB,UAA8CT,SAAS,CAACM,YAAD,CAAT,CAAwBS,OAAtE,EAFJ,cAGI,eAAQ,OAAO,CAAE,yBAAMN,CAAAA,eAAe,CAAC,GAAD,CAArB,EAAjB,UAA8CT,SAAS,CAACM,YAAD,CAAT,CAAwBU,OAAtE,EAHJ,cAII,eAAQ,OAAO,CAAE,yBAAMP,CAAAA,eAAe,CAAC,GAAD,CAArB,EAAjB,UAA8CT,SAAS,CAACM,YAAD,CAAT,CAAwBW,OAAtE,EAJJ,GAFJ,CASCX,YAAY,EAAIN,SAAS,CAACkB,MAAV,CAAmB,CAAnC,cACG,eAAQ,OAAO,CAAEN,UAAjB,yBADH,cAGG,eAAQ,OAAO,CAAEF,YAAjB,2BAZJ,GADJ,CAkBH,CAED,cAAeR,CAAAA,IAAf","sourcesContent":["import React,{useState, useContext} from 'react';\r\nimport {Questions} from './Helpers/QuestionBank';\r\nimport { QuizContext } from './Helpers/Contexts';\r\n\r\nfunction Quiz() {\r\n    const {score, setScore, setGameState} = useContext(QuizContext);\r\n\r\n    const [currQuestion, setCurrQuestion] = useState(0);\r\n    const[optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n    const nextQuestion = () => {\r\n        if(Questions[currQuestion].answer == optionChosen) {\r\n            setScore(score + 1);\r\n        }\r\n        setCurrQuestion(currQuestion + 1);\r\n    };\r\n\r\n    const finishQuiz = () => {\r\n        if(Questions[currQuestion].answer == optionChosen) {\r\n            setScore(score + 1);\r\n        }\r\n        setGameState(\"endScreen\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"Quiz\">\r\n            <h1>{Questions[currQuestion].prompt}</h1>\r\n            <div className=\"options\">\r\n                <button onClick={() => setOptionChosen(\"A\")}>{Questions[currQuestion].optionA }</button>\r\n                <button onClick={() => setOptionChosen(\"B\")}>{Questions[currQuestion].optionB }</button>\r\n                <button onClick={() => setOptionChosen(\"C\")}>{Questions[currQuestion].optionC }</button>\r\n                <button onClick={() => setOptionChosen(\"D\")}>{Questions[currQuestion].optionD }</button>\r\n            </div>\r\n        \r\n        {currQuestion == Questions.length - 1  ? (\r\n            <button onClick={finishQuiz}>Finish Quiz</button>\r\n        ) : (\r\n            <button onClick={nextQuestion}>Next Question</button>\r\n        )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n"]},"metadata":{},"sourceType":"module"}