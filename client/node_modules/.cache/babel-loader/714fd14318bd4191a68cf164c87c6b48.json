{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"C:/Users/hogwa/Documents/AdvancedNodeAuth/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/hogwa/Documents/AdvancedNodeAuth/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/hogwa/Documents/AdvancedNodeAuth/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{Link}from\"react-router-dom\";import axios from\"axios\";import\"./ResetPasswordScreen.css\";var ResetPasswordScreen=function ResetPasswordScreen(_ref){var history=_ref.history,match=_ref.match;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),success=_useState8[0],setSuccess=_useState8[1];var resetPasswordHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var config,_yield$axios$put,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();config={header:{\"Content-Type\":\"application/json\"}};if(!(password!==confirmPassword)){_context.next=7;break;}setPassword(\"\");setConfirmPassword(\"\");setTimeout(function(){setError(\"\");},5000);return _context.abrupt(\"return\",setError(\"Passwords don't match\"));case 7:_context.prev=7;_context.next=10;return axios.put(\"/api/auth/passwordreset/\".concat(match.params.resetToken),{password:password},config);case 10:_yield$axios$put=_context.sent;data=_yield$axios$put.data;console.log(data);setSuccess(data.data);_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](7);setError(_context.t0.response.data.error);setTimeout(function(){setError(\"\");},5000);case 20:case\"end\":return _context.stop();}}},_callee,null,[[7,16]]);}));return function resetPasswordHandler(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"resetpassword-screen\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:resetPasswordHandler,className:\"resetpassword-screen__form\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"resetpassword-screen__title\",children:\"Forgot Password\"}),error&&/*#__PURE__*/_jsxs(\"span\",{className:\"error-message\",children:[error,\" \"]}),success&&/*#__PURE__*/_jsxs(\"span\",{className:\"success-message\",children:[success,\" \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"New Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",required:true,id:\"password\",placeholder:\"Enter new password\",autoComplete:\"true\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmpassword\",children:\"Confirm New Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",required:true,id:\"confirmpassword\",placeholder:\"Confirm new password\",autoComplete:\"true\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Reset Password\"})]})});};export default ResetPasswordScreen;","map":{"version":3,"sources":["C:/Users/hogwa/documents/advancednodeauth/client/src/components/screens/ResetPasswordScreen.js"],"names":["useState","Link","axios","ResetPasswordScreen","history","match","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","config","header","setTimeout","put","params","resetToken","data","console","log","response","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({ history, match }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords don't match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/auth/passwordreset/${match.params.resetToken}`,\r\n        {\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data);\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetpassword-screen\">\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"resetpassword-screen__form\"\r\n      >\r\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error} </span>}\r\n        {success && (\r\n          <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm new password\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;\r\n"]},"metadata":{},"sourceType":"module"}